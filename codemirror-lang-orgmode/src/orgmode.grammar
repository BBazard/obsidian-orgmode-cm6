@top Program {
  ZerothSection?
  Block*
}

ZerothSection {
  notStartOfHeading
  CommentLine*
  PropertyDrawer?
  (
    notStartOfPropertyDrawer
    (
      notStartOfHeading
      (paragraph)
    )+
  )?
}

Block {
  Heading Section?
}

// https://orgmode.org/worg/org-syntax.html#Headings
Heading {
  stars TodoKeyword? Priority? Title Tags? endofline
}

Section {
  notStartOfHeading
  (CommentLine | Planning)*
  PropertyDrawer?
  (
    notStartOfPlanning notStartOfPropertyDrawer
    (
      notStartOfHeading
      (paragraph) // or GreaterBlock, etc...
    )+
  )?
}

paragraph {
  CommentLine
  |
  notStartOfComment (
    sectionSpace? (object sectionSpace?)* sectionEnd
  )
}

object {
  textMarkup | sectionword
}

textMarkup {
  TextBold | TextItalic | TextUnderline | TextVerbatim | TextCode | TextStrikeThrough
}

TextBold {
  isStartOfTextBold "*"
  (
    sectionwordBold (sectionSpace sectionwordBold)*
  )
  isEndOfTextBold "*"
}

TextItalic {
  isStartOfTextItalic "/"
  (
    sectionwordItalic (sectionSpace sectionwordItalic)*
  )
  isEndOfTextItalic "/"
}

TextUnderline {
  isStartOfTextUnderline "_"
  (
    sectionwordUnderline (sectionSpace sectionwordUnderline)*
  )
  isEndOfTextUnderline "_"
}

TextVerbatim {
  isStartOfTextVerbatim "="
  (
    sectionwordVerbatim (sectionSpace sectionwordVerbatim)*
  )
  isEndOfTextVerbatim "="
}

TextCode {
  isStartOfTextCode "~"
  (
    sectionwordCode (sectionSpace sectionwordCode)*
  )
  isEndOfTextCode "~"
}

TextStrikeThrough {
  isStartOfTextStrikeThrough "+"
  (
    sectionwordStrikeThrough (sectionSpace sectionwordStrikeThrough)*
  )
  isEndOfTextStrikeThrough "+"
}


@external tokens isStartOfTextBold_lookaround from "./external-tokens" { isStartOfTextBold }
@external tokens isStartOfTextItalic_lookaround from "./external-tokens" { isStartOfTextItalic }
@external tokens isStartOfTextUnderline_lookaround from "./external-tokens" { isStartOfTextUnderline }
@external tokens isStartOfTextVerbatim_lookaround from "./external-tokens" { isStartOfTextVerbatim }
@external tokens isStartOfTextCode_lookaround from "./external-tokens" { isStartOfTextCode }
@external tokens isStartOfTextStrikeThrough_lookaround from "./external-tokens" { isStartOfTextStrikeThrough }

@external tokens isEndOfTextBold_lookaround from "./external-tokens" { isEndOfTextBold }
@external tokens isEndOfTextItalic_lookaround from "./external-tokens" { isEndOfTextItalic }
@external tokens isEndOfTextUnderline_lookaround from "./external-tokens" { isEndOfTextUnderline }
@external tokens isEndOfTextVerbatim_lookaround from "./external-tokens" { isEndOfTextVerbatim }
@external tokens isEndOfTextCode_lookaround from "./external-tokens" { isEndOfTextCode }
@external tokens isEndOfTextStrikeThrough_lookaround from "./external-tokens" { isEndOfTextStrikeThrough }

// https://orgmode.org/worg/org-syntax.html#Planning
Planning { planningStart endofline }

// https://orgmode.org/worg/org-syntax.html#Property_Drawers
@external tokens propertydrawer_tokenizer from "./external-tokens" { PropertyDrawer }

@external tokens title_tokenizer from "./external-tokens" { Title }

@external tokens todokeyword_tokenizer from "./external-tokens" { TodoKeyword }


@external tokens notStartOfPlanning_lookaround from "./external-tokens" { notStartOfPlanning }
@external tokens notStartOfPropertyDrawer_lookaround from "./external-tokens" { notStartOfPropertyDrawer }

@external tokens notStartOfHeading_lookaround from "./external-tokens" { notStartOfHeading }
@external tokens notStartOfComment_lookaround from "./external-tokens" { notStartOfComment }

// need to be between after Section and before endofline
@tokens {
  Priority { $[ \t]* "[" "#" $[a-zA-Z0-9] "]" $[ \t]* }
  Tags { ":" ($[a-zA-Z0-9_@#%]+ ":")+ }
  stars { "*"+ $[ \t]+ }
  CommentLine { "#" ![\n]* ("\n" | @eof) }
  planningStart { ("DEADLINE:"|"SCHEDULED:"|"CLOSED:") }
}

// need to be last to not override something else
@external tokens endofline_tokenizer from "./external-tokens" { endofline }

// https://orgmode.org/worg/org-syntax.html#Sections
@external tokens sectionWord_tokenizer from "./external-tokens" { sectionword }

@external tokens sectionWordBold_tokenizer from "./external-tokens" { sectionwordBold }
@external tokens sectionWordItalic_tokenizer from "./external-tokens" { sectionwordItalic }
@external tokens sectionWordUnderline_tokenizer from "./external-tokens" { sectionwordUnderline }
@external tokens sectionWordVerbatim_tokenizer from "./external-tokens" { sectionwordVerbatim }
@external tokens sectionWordCode_tokenizer from "./external-tokens" { sectionwordCode }
@external tokens sectionWordStrikeThrough_tokenizer from "./external-tokens" { sectionwordStrikeThrough }

@external tokens sectionSpace_tokenizer from "./external-tokens" { sectionSpace }
@external tokens sectionEnd_tokenizer from "./external-tokens" { sectionEnd }
